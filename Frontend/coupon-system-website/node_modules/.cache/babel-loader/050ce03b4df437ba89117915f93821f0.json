{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    const token = 'Bearer ' + user.token;\n    config.headers.Authorization = token;\n  }\n\n  return config;\n});\n\nclass CustomerService {\n  async getCoupons() {\n    return await axios.get(\"http://localhost:8080/customer/get-coupons\");\n  }\n\n  async getCoupons(category) {\n    return await axios.get(\"http://localhost:8080/customer/get-coupons-category?category=\" + category);\n  }\n\n  async getCoupons(price) {\n    return await axios.get(\"http://localhost:8080/customer/get-coupons-max-price?maxPrice=\" + price);\n  }\n\n  async purchaseCoupon(couponId) {\n    return await axios.get(\"http://localhost:8080/customer/purchase-coupon?couponId=\" + couponId);\n  }\n\n  async getDetails() {\n    return await axios.get(\"http://localhost:8080/customer/get-details\");\n  }\n\n}\n\nexport default new CustomerService();","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/services/user-services/CustomerService.js"],"names":["axios","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","headers","Authorization","CustomerService","getCoupons","get","category","price","purchaseCoupon","couponId","getDetails"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACrC,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,MAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAjB,EAAwB;AACpB,UAAMA,KAAK,GAAG,YAAYL,IAAI,CAACK,KAA/B;AACAN,IAAAA,MAAM,CAACO,OAAP,CAAeC,aAAf,GAA+BF,KAA/B;AACH;;AACD,SAAON,MAAP;AACH,CAPD;;AASA,MAAMS,eAAN,CAAsB;AAEF,QAAVC,UAAU,GAAG;AACf,WAAO,MAAMd,KAAK,CAACe,GAAN,CAAU,4CAAV,CAAb;AACH;;AAGe,QAAVD,UAAU,CAACE,QAAD,EAAW;AACvB,WAAO,MAAMhB,KAAK,CAACe,GAAN,CAAU,kEAAkEC,QAA5E,CAAb;AACH;;AAEe,QAAVF,UAAU,CAACG,KAAD,EAAQ;AACpB,WAAO,MAAMjB,KAAK,CAACe,GAAN,CAAU,mEAAmEE,KAA7E,CAAb;AAEH;;AAEmB,QAAdC,cAAc,CAACC,QAAD,EAAW;AAC3B,WAAO,MAAMnB,KAAK,CAACe,GAAN,CAAU,6DAA6DI,QAAvE,CAAb;AACH;;AAEe,QAAVC,UAAU,GAAG;AACf,WAAO,MAAMpB,KAAK,CAACe,GAAN,CAAU,4CAAV,CAAb;AACH;;AAtBiB;;AA0BtB,eAAe,IAAIF,eAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(config => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n        const token = 'Bearer ' + user.token;\r\n        config.headers.Authorization = token;\r\n    }\r\n    return config;\r\n});\r\n\r\nclass CustomerService {\r\n\r\n    async getCoupons() {\r\n        return await axios.get(\"http://localhost:8080/customer/get-coupons\")\r\n    }\r\n\r\n\r\n    async getCoupons(category) {\r\n        return await axios.get(\"http://localhost:8080/customer/get-coupons-category?category=\" + category)\r\n    }\r\n\r\n    async getCoupons(price) {\r\n        return await axios.get(\"http://localhost:8080/customer/get-coupons-max-price?maxPrice=\" + price)\r\n\r\n    }\r\n\r\n    async purchaseCoupon(couponId) {\r\n        return await axios.get(\"http://localhost:8080/customer/purchase-coupon?couponId=\" + couponId);\r\n    }\r\n\r\n    async getDetails() {\r\n        return await axios.get(\"http://localhost:8080/customer/get-details\");\r\n    }\r\n\r\n}\r\n\r\nexport default new CustomerService();"]},"metadata":{},"sourceType":"module"}