{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  constructor() {\n    this.logIn = async (email, password, userType) => {\n      return await axios.post(\"http://localhost:8080/login-manager/login?email=\" + email + \"&password=\" + password + \"&userType=\" + userType).then(response => {\n        if (response.data) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      }).catch(err => {\n        throw err;\n      });\n    };\n  }\n\n  logOut() {\n    localStorage.removeItem(\"user\");\n  } //TODO here\n  // registerCustomer = async (firstName, lastName, email, password) => {\n  //     return axios.post(\"http://localhost:8080/admin/add-customer\", {\n  //         firstName, lastName, email, password\n  //     });\n  // }\n  // registerCompany = async (name, email, password) => {\n  //     return axios.post(\"http://localhost:8080/admin/create-company\", {\n  //         name, email, password\n  //     });\n  // }\n\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/services/AuthenticationService.js"],"names":["axios","AuthenticationService","logIn","email","password","userType","post","then","response","data","localStorage","setItem","JSON","stringify","catch","err","logOut","removeItem","getCurrentUser","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA4B;AAAA;AAAA,SACxBC,KADwB,GAChB,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,QAAxB,KAAqC;AACzC,aAAO,MAAML,KAAK,CAACM,IAAN,CAAW,qDAAqDH,KAArD,GAA6D,YAA7D,GAA4EC,QAA5E,GAAuF,YAAvF,GAAsGC,QAAjH,EACRE,IADQ,CACHC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,IAAb,EAAmB;AACfC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AACD,eAAOD,QAAQ,CAACC,IAAhB;AACH,OANQ,EAORK,KAPQ,CAOFC,GAAG,IAAI;AACV,cAAMA,GAAN;AACH,OATQ,CAAb;AAUH,KAZuB;AAAA;;AAcxBC,EAAAA,MAAM,GAAG;AACLN,IAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB;AACH,GAhBuB,CAkBxB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,cAAc,GAAG;AACb,WAAON,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;;AAjCuB;;AAoC5B,eAAe,IAAInB,qBAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\nclass AuthenticationService {\r\n    logIn = async (email, password, userType) => {\r\n        return await axios.post(\"http://localhost:8080/login-manager/login?email=\" + email + \"&password=\" + password + \"&userType=\" + userType)\r\n            .then(response => {\r\n                if (response.data) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n                return response.data;\r\n            })\r\n            .catch(err => {\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    logOut() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    //TODO here\r\n    // registerCustomer = async (firstName, lastName, email, password) => {\r\n    //     return axios.post(\"http://localhost:8080/admin/add-customer\", {\r\n    //         firstName, lastName, email, password\r\n    //     });\r\n    // }\r\n\r\n    // registerCompany = async (name, email, password) => {\r\n    //     return axios.post(\"http://localhost:8080/admin/create-company\", {\r\n    //         name, email, password\r\n    //     });\r\n    // }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService();"]},"metadata":{},"sourceType":"module"}