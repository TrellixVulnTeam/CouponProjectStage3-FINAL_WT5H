{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    const token = 'Bearer ' + user.token;\n    config.headers.Authorization = token;\n  }\n\n  return config;\n});\n\nclass CompanyService {\n  async createCoupon(id, amount, category, description, endDate, startDate, price, image, title) {\n    return await axios.post(\"http://localhost:8080/company/add-coupon\", {\n      id,\n      amount,\n      category,\n      description,\n      endDate,\n      startDate,\n      price,\n      image,\n      title\n    });\n  }\n\n  async updateCoupon(id, amount, category, description, endDate, startDate, price, image, title) {\n    return await axios.put(\"http://localhost:8080/company/update-coupon\", {\n      id,\n      amount,\n      category,\n      description,\n      endDate,\n      startDate,\n      price,\n      image,\n      title\n    });\n  }\n\n  async deleteCoupon(id) {}\n\n  async getCoupons() {\n    return await axios.get(\"http://localhost:8080/company/get-coupons\");\n  }\n\n  async getCouponsCategory(category) {\n    return await axios.get(\"http://localhost:8080/company/get-coupons-category?category=\" + category);\n  }\n\n  async getCouponsPrice(price) {\n    return await axios.get(\"http://localhost:8080/company/get-coupons-max-price?maxPrice=\" + price);\n  }\n\n  async getDetails() {\n    return await axios.get(\"http://localhost:8080/company/get-details\");\n  }\n\n}\n\nexport default new CompanyService();","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/services/user-services/CompanyService.js"],"names":["axios","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","headers","Authorization","CompanyService","createCoupon","id","amount","category","description","endDate","startDate","price","image","title","post","updateCoupon","put","deleteCoupon","getCoupons","get","getCouponsCategory","getCouponsPrice","getDetails"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACrC,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,MAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAjB,EAAwB;AACpB,UAAMA,KAAK,GAAG,YAAYL,IAAI,CAACK,KAA/B;AACAN,IAAAA,MAAM,CAACO,OAAP,CAAeC,aAAf,GAA+BF,KAA/B;AACH;;AACD,SAAON,MAAP;AACH,CAPD;;AASA,MAAMS,cAAN,CAAqB;AAEC,QAAZC,YAAY,CACdC,EADc,EAEdC,MAFc,EAGdC,QAHc,EAIdC,WAJc,EAKdC,OALc,EAMdC,SANc,EAOdC,KAPc,EAQdC,KARc,EASdC,KATc,EAUhB;AACE,WAAO,MAAMvB,KAAK,CAACwB,IAAN,CAAW,0CAAX,EAAuD;AAChET,MAAAA,EADgE;AAEhEC,MAAAA,MAFgE;AAGhEC,MAAAA,QAHgE;AAIhEC,MAAAA,WAJgE;AAKhEC,MAAAA,OALgE;AAMhEC,MAAAA,SANgE;AAOhEC,MAAAA,KAPgE;AAQhEC,MAAAA,KARgE;AAShEC,MAAAA;AATgE,KAAvD,CAAb;AAWH;;AAEiB,QAAZE,YAAY,CACdV,EADc,EAEdC,MAFc,EAGdC,QAHc,EAIdC,WAJc,EAKdC,OALc,EAMdC,SANc,EAOdC,KAPc,EAQdC,KARc,EASdC,KATc,EAUhB;AACE,WAAO,MAAMvB,KAAK,CAAC0B,GAAN,CAAU,6CAAV,EAAyD;AAClEX,MAAAA,EADkE;AAElEC,MAAAA,MAFkE;AAGlEC,MAAAA,QAHkE;AAIlEC,MAAAA,WAJkE;AAKlEC,MAAAA,OALkE;AAMlEC,MAAAA,SANkE;AAOlEC,MAAAA,KAPkE;AAQlEC,MAAAA,KARkE;AASlEC,MAAAA;AATkE,KAAzD,CAAb;AAWH;;AAEiB,QAAZI,YAAY,CAACZ,EAAD,EAAK,CAEtB;;AAEe,QAAVa,UAAU,GAAG;AACf,WAAO,MAAM5B,KAAK,CAAC6B,GAAN,CAAU,2CAAV,CAAb;AACH;;AAEuB,QAAlBC,kBAAkB,CAACb,QAAD,EAAW;AAC/B,WAAO,MAAMjB,KAAK,CAAC6B,GAAN,CAAU,iEAAiEZ,QAA3E,CAAb;AACH;;AAEoB,QAAfc,eAAe,CAACV,KAAD,EAAQ;AACzB,WAAO,MAAMrB,KAAK,CAAC6B,GAAN,CAAU,kEAAkER,KAA5E,CAAb;AACH;;AAEe,QAAVW,UAAU,GAAG;AACf,WAAO,MAAMhC,KAAK,CAAC6B,GAAN,CAAU,2CAAV,CAAb;AACH;;AApEgB;;AAwErB,eAAe,IAAIhB,cAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(config => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n        const token = 'Bearer ' + user.token;\r\n        config.headers.Authorization = token;\r\n    }\r\n    return config;\r\n});\r\n\r\nclass CompanyService {\r\n\r\n    async createCoupon(\r\n        id,\r\n        amount,\r\n        category,\r\n        description,\r\n        endDate,\r\n        startDate,\r\n        price,\r\n        image,\r\n        title\r\n    ) {\r\n        return await axios.post(\"http://localhost:8080/company/add-coupon\", {\r\n            id,\r\n            amount,\r\n            category,\r\n            description,\r\n            endDate,\r\n            startDate,\r\n            price,\r\n            image,\r\n            title\r\n        })\r\n    }\r\n\r\n    async updateCoupon(\r\n        id,\r\n        amount,\r\n        category,\r\n        description,\r\n        endDate,\r\n        startDate,\r\n        price,\r\n        image,\r\n        title\r\n    ) {\r\n        return await axios.put(\"http://localhost:8080/company/update-coupon\", {\r\n            id,\r\n            amount,\r\n            category,\r\n            description,\r\n            endDate,\r\n            startDate,\r\n            price,\r\n            image,\r\n            title\r\n        })\r\n    }\r\n\r\n    async deleteCoupon(id) {\r\n\r\n    }\r\n\r\n    async getCoupons() {\r\n        return await axios.get(\"http://localhost:8080/company/get-coupons\")\r\n    }\r\n\r\n    async getCouponsCategory(category) {\r\n        return await axios.get(\"http://localhost:8080/company/get-coupons-category?category=\" + category)\r\n    }\r\n\r\n    async getCouponsPrice(price) {\r\n        return await axios.get(\"http://localhost:8080/company/get-coupons-max-price?maxPrice=\" + price)\r\n    }\r\n\r\n    async getDetails() {\r\n        return await axios.get(\"http://localhost:8080/company/get-details\");\r\n    }\r\n\r\n}\r\n\r\nexport default new CompanyService();"]},"metadata":{},"sourceType":"module"}