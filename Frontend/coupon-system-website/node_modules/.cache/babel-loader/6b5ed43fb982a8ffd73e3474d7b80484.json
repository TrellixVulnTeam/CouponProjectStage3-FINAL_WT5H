{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spide\\\\Desktop\\\\Visual Studio Workspace\\\\GradeProjectStage3\\\\coupon-system-website\\\\src\\\\components\\\\App\\\\content\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport './login.css';\nimport image from './../../../../assests/The Coupon Project Logo.png';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useEffect, useRef, useState } from 'react';\nimport ForceUpdate from '../../../../hooks/ForceUpdate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const [oldValues, setOldValues] = useState({\n    email: '',\n    password: '',\n    type: 'Customer'\n  });\n  const [submitRef, formikRef] = [useRef(), useRef()];\n  const forceUpdate = ForceUpdate();\n  useEffect(() => {\n    props.setSidebarVisible(false);\n    props.setHeaderVisible(false);\n    if (formikRef.current.values.email === oldValues.email && formikRef.current.values.password === oldValues.password && formikRef.current.values.type === oldValues.type) submitRef.current.disabled = true;else submitRef.current.disabled = false;\n  });\n  const validationSchema = Yup.object({\n    email: Yup.string().email().required('Required'),\n    password: Yup.string().required('Required')\n  });\n\n  const handleSubmit = (values, {\n    setFieldValue\n  }) => {\n    //if login is successful\n    if (true) {\n      switch (values.type) {\n        case 'Customer':\n          props.setContent('Customer');\n          break;\n\n        case 'Company':\n          props.setContent('Company');\n          break;\n\n        case 'Admin':\n          props.setContent('Admin');\n          break;\n\n        default:\n          window.location.reload();\n          break;\n      }\n\n      return;\n    } //if login is unsuccessful\n\n\n    setOldValues(values);\n    setFieldValue('password', '');\n    setTimeout(() => {\n      alert(\"Email or Password are incorrect, try again.\");\n    }, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Login img\",\n      width: \"500\",\n      className: \"Login-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-formik\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: '',\n          type: 'Customer'\n        },\n        onSubmit: (values, {\n          setFieldValue\n        }) => handleSubmit(values, {\n          setFieldValue\n        }),\n        validationSchema: validationSchema,\n        innerRef: formikRef,\n        children: ({\n          handleChange,\n          isValid\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              className: \"form-control\",\n              placeholder: \"Email\",\n              autoComplete: \"true\",\n              onChange: event => {\n                handleChange(event);\n                forceUpdate();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"email\",\n            className: \"alert alert-primary\",\n            id: \"Login-alert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              className: \"form-control\",\n              placeholder: \"Password\",\n              autoComplete: \"true\",\n              onChange: event => {\n                handleChange(event);\n                forceUpdate();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login-alerts\",\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"password\",\n              className: \"alert alert-primary\",\n              id: \"Login-alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Login as...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-select\",\n              component: \"select\",\n              name: \"type\",\n              onChange: event => {\n                handleChange(event);\n                forceUpdate();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Customer\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Company\",\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login-submit\",\n            id: \"Login-padding\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              ref: submitRef,\n              disabled: !isValid,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Login, \"kRb/US6xNtNyiVOnqubjyrTDl6g=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/components/App/content/Login/Login.js"],"names":["image","Yup","Formik","Form","Field","ErrorMessage","useEffect","useRef","useState","ForceUpdate","Login","props","oldValues","setOldValues","email","password","type","submitRef","formikRef","forceUpdate","setSidebarVisible","setHeaderVisible","current","values","disabled","validationSchema","object","string","required","handleSubmit","setFieldValue","setContent","window","location","reload","setTimeout","alert","handleChange","isValid","event"],"mappings":"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","sourcesContent":["import './login.css'\r\nimport image from './../../../../assests/The Coupon Project Logo.png'\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ForceUpdate from '../../../../hooks/ForceUpdate';\r\n\r\nexport default function Login(props) {\r\n    const [oldValues, setOldValues] = useState({ email: '', password: '', type: 'Customer' })\r\n    const [submitRef, formikRef] = [useRef(), useRef()]\r\n    const forceUpdate = ForceUpdate();\r\n\r\n    useEffect(() => {\r\n        props.setSidebarVisible(false)\r\n        props.setHeaderVisible(false)\r\n        if (formikRef.current.values.email === oldValues.email && formikRef.current.values.password === oldValues.password && formikRef.current.values.type === oldValues.type)\r\n            submitRef.current.disabled = true\r\n        else\r\n            submitRef.current.disabled = false\r\n    })\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email().required('Required'),\r\n        password: Yup.string().required('Required')\r\n    })\r\n\r\n    const handleSubmit = (values, { setFieldValue }) => {\r\n        //if login is successful\r\n        if (true) {\r\n            switch (values.type) {\r\n                case 'Customer':\r\n                    props.setContent('Customer')\r\n                    break;\r\n                case 'Company':\r\n                    props.setContent('Company')\r\n                    break;\r\n                case 'Admin':\r\n                    props.setContent('Admin')\r\n                    break;\r\n                default:\r\n                    window.location.reload()\r\n                    break;\r\n            }\r\n            return\r\n        }\r\n        //if login is unsuccessful\r\n        setOldValues(values)\r\n        setFieldValue('password', '')\r\n        setTimeout(() => { alert(\"Email or Password are incorrect, try again.\") }, 0)\r\n    };\r\n\r\n    return (<div className='Login'>\r\n        <img src={image} alt='Login img' width='500' className='Login-img' />\r\n        <div className='Login-formik'>\r\n            <Formik initialValues={{ email: '', password: '', type: 'Customer' }}\r\n                onSubmit={(values, { setFieldValue }) => handleSubmit(values, { setFieldValue })}\r\n                validationSchema={validationSchema}\r\n                innerRef={formikRef}\r\n            >\r\n                {({ handleChange, isValid }) => (\r\n                    <Form>\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label>\r\n                                Enter Email:\r\n                            </label>\r\n                            <Field\r\n                                type='email'\r\n                                name='email'\r\n                                className='form-control'\r\n                                placeholder='Email'\r\n                                autoComplete='true'\r\n                                onChange={(event) => { handleChange(event); forceUpdate() }}\r\n                            />\r\n                        </div>\r\n                        <ErrorMessage component='div' name='email' className='alert alert-primary' id='Login-alert' />\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label>\r\n                                Enter Password:\r\n                            </label>\r\n                            <Field\r\n                                type='password'\r\n                                name='password'\r\n                                className='form-control'\r\n                                placeholder='Password'\r\n                                autoComplete='true'\r\n                                onChange={(event) => { handleChange(event); forceUpdate() }}\r\n                            />\r\n                        </div>\r\n                        <div className='Login-alerts'>\r\n                            <ErrorMessage component='div' name='password' className='alert alert-primary' id='Login-alert' />\r\n                        </div>\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label>\r\n                                Login as...\r\n                            </label>\r\n                            <Field\r\n                                className='form-select'\r\n                                component=\"select\"\r\n                                name=\"type\"\r\n                                onChange={(event) => { handleChange(event); forceUpdate() }}\r\n                            >\r\n                                <option value=\"Customer\">Customer</option>\r\n                                <option value=\"Company\">Company</option>\r\n                                <option value=\"Admin\">Admin</option>\r\n                            </Field>\r\n                        </div>\r\n                        <div className='Login-submit' id='Login-padding'>\r\n                            <button type='submit' className='btn btn-primary' ref={submitRef} disabled={!isValid} >\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </div>\r\n\r\n    </div >)\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}