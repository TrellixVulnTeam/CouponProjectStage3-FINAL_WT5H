{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    const token = 'Bearer ' + user.token;\n    config.headers.Authorization = token;\n  }\n\n  return config;\n});\n\nclass AdminService {\n  async getCustomer(id) {\n    return await axios.get('http://localhost:8080/admin/get-customer?id=+id');\n  }\n\n  async getCustomers() {\n    return await axios.get('http://localhost:8080/admin/get-customers');\n  }\n\n  async getLogs() {\n    return await axios.get('http://localhost:8080/admin/get-logs');\n  }\n\n  async clearLogs() {\n    return await axios.delete(\"http://localhost:8080/admin/clear-logs\");\n  }\n\n  async updateCompany(id, name, email, password) {\n    return await axios.put('http://localhost:8080/admin/update-company', {\n      id,\n      name,\n      email,\n      password\n    });\n  }\n\n  async updateCustomer(id, firstName, lastName, email, password) {\n    return await axios.put(\"http://localhost:8080/admin/update-customer\", {\n      id,\n      firstName,\n      lastName,\n      email,\n      password\n    });\n  }\n\n  async getCoupons() {\n    return await axios.get(\"http://localhost:8080/admin/get-coupons\");\n  }\n\n}\n\nexport default new AdminService();","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/services/user-services/AdminService.js"],"names":["axios","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","headers","Authorization","AdminService","getCustomer","id","get","getCustomers","getLogs","clearLogs","delete","updateCompany","name","email","password","put","updateCustomer","firstName","lastName","getCoupons"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACrC,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,MAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAjB,EAAwB;AACpB,UAAMA,KAAK,GAAG,YAAYL,IAAI,CAACK,KAA/B;AACAN,IAAAA,MAAM,CAACO,OAAP,CAAeC,aAAf,GAA+BF,KAA/B;AACH;;AACD,SAAON,MAAP;AACH,CAPD;;AASA,MAAMS,YAAN,CAAmB;AAEE,QAAXC,WAAW,CAACC,EAAD,EAAK;AAClB,WAAO,MAAMf,KAAK,CAACgB,GAAN,CAAU,iDAAV,CAAb;AACH;;AAEiB,QAAZC,YAAY,GAAG;AACjB,WAAO,MAAMjB,KAAK,CAACgB,GAAN,CAAU,2CAAV,CAAb;AACH;;AAEY,QAAPE,OAAO,GAAG;AACZ,WAAO,MAAMlB,KAAK,CAACgB,GAAN,CAAU,sCAAV,CAAb;AACH;;AAEc,QAATG,SAAS,GAAG;AACd,WAAO,MAAMnB,KAAK,CAACoB,MAAN,CAAa,wCAAb,CAAb;AACH;;AAEkB,QAAbC,aAAa,CAACN,EAAD,EAAKO,IAAL,EAAWC,KAAX,EAAkBC,QAAlB,EAA4B;AAC3C,WAAO,MAAMxB,KAAK,CAACyB,GAAN,CAAU,4CAAV,EAAwD;AACjEV,MAAAA,EADiE;AAEjEO,MAAAA,IAFiE;AAGjEC,MAAAA,KAHiE;AAIjEC,MAAAA;AAJiE,KAAxD,CAAb;AAMH;;AAEmB,QAAdE,cAAc,CAACX,EAAD,EAAKY,SAAL,EAAgBC,QAAhB,EAA0BL,KAA1B,EAAiCC,QAAjC,EAA2C;AAC3D,WAAO,MAAMxB,KAAK,CAACyB,GAAN,CAAU,6CAAV,EAAyD;AAClEV,MAAAA,EADkE;AAElEY,MAAAA,SAFkE;AAGlEC,MAAAA,QAHkE;AAIlEL,MAAAA,KAJkE;AAKlEC,MAAAA;AALkE,KAAzD,CAAb;AAOH;;AAEe,QAAVK,UAAU,GAAG;AACf,WAAO,MAAM7B,KAAK,CAACgB,GAAN,CAAU,yCAAV,CAAb;AACH;;AAvCc;;AA2CnB,eAAe,IAAIH,YAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(config => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n        const token = 'Bearer ' + user.token;\r\n        config.headers.Authorization = token;\r\n    }\r\n    return config;\r\n});\r\n\r\nclass AdminService {\r\n\r\n    async getCustomer(id) {\r\n        return await axios.get('http://localhost:8080/admin/get-customer?id=+id')\r\n    }\r\n\r\n    async getCustomers() {\r\n        return await axios.get('http://localhost:8080/admin/get-customers')\r\n    }\r\n\r\n    async getLogs() {\r\n        return await axios.get('http://localhost:8080/admin/get-logs')\r\n    }\r\n\r\n    async clearLogs() {\r\n        return await axios.delete(\"http://localhost:8080/admin/clear-logs\")\r\n    }\r\n\r\n    async updateCompany(id, name, email, password) {\r\n        return await axios.put('http://localhost:8080/admin/update-company', {\r\n            id,\r\n            name,\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n    async updateCustomer(id, firstName, lastName, email, password) {\r\n        return await axios.put(\"http://localhost:8080/admin/update-customer\", {\r\n            id,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n    async getCoupons() {\r\n        return await axios.get(\"http://localhost:8080/admin/get-coupons\");\r\n    }\r\n\r\n}\r\n\r\nexport default new AdminService();"]},"metadata":{},"sourceType":"module"}