{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spide\\\\Desktop\\\\Visual Studio Workspace\\\\GradeProjectStage3\\\\coupon-system-website\\\\src\\\\components\\\\App\\\\content\\\\User\\\\Admin\\\\AdminCompanies\\\\AdminCompanies.js\",\n    _s = $RefreshSig$();\n\nimport AdminCompanyActionbar from './AdminCompanyActionbar/AdminCompanyActionbar';\nimport './admin-companies.css';\nimport { Form, Formik } from \"formik\";\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport AdminService from \"../../../../../../services/user-services/AdminService\";\nimport AuthenticationService from \"../../../../../../services/AuthenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminCompanies() {\n  _s();\n\n  const [companies, setCompanies] = useState([{\n    id: '',\n    name: '',\n    email: '',\n    password: ''\n  }]);\n  useEffect(() => {\n    AdminService.getCompanies().then(result => {\n      setCompanies(result.data);\n    }, error => {\n      try {\n        if (error.response.data.response) {\n          return;\n        }\n\n        if (error.response) {\n          setTimeout(() => {\n            alert(\"Login expired, please login again.\");\n          }, 0);\n          AuthenticationService.logOut();\n        }\n      } catch {\n        setTimeout(() => {\n          alert(\"Servers are currently down, try again later.\");\n        }, 0);\n        AuthenticationService.logOut();\n      }\n    });\n  }, []);\n  const companiesRef = useRef([]);\n  companiesRef.current = companies.map((empty, i) => {\n    var _companiesRef$current;\n\n    return (_companiesRef$current = companiesRef.current[i]) !== null && _companiesRef$current !== void 0 ? _companiesRef$current : /*#__PURE__*/createRef();\n  });\n\n  const getCompanies = handleChange => {\n    if (companies[0].id === '') return;\n    return companies.map((stream, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          ref: companiesRef.current[index],\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"checked\",\n            value: index,\n            id: stream.id,\n            className: \"AdminCompanies-field-checkbox\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: stream.id,\n              className: \"AdminCompanies-table-id-label\",\n              id: \"AdminCompanies-table-id-label\",\n              title: `ID: ${stream.id}`,\n              children: stream.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: stream.id,\n              className: \"AdminCompanies-table-text-label\",\n              id: \"AdminCompanies-table-text-label\",\n              title: `NAME: ${stream.name}`,\n              children: stream.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: stream.id,\n              className: \"AdminCompanies-table-text-label\",\n              id: \"AdminCompanies-table-text-label\",\n              title: `EMAIL: ${stream.email}`,\n              children: stream.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"AdminCompanies-table-tr-seperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminCompanies\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        checked: []\n      },\n      children: ({\n        values,\n        handleReset,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AdminCompanyActionbar, {\n          values: values,\n          companiesRef: companiesRef,\n          companies: companies,\n          setCompanies: setCompanies,\n          handleReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"AdminCompanies-table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"AdminCompanies-table-header\",\n                  id: \"AdminCompanies-table-header-id\",\n                  width: \"5%\",\n                  title: \"ID\",\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"AdminCompanies-table-header\",\n                  width: \"47.5%\",\n                  title: \"Name\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"AdminCompanies-table-header\",\n                  width: \"47.5%\",\n                  title: \"Email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), getCompanies(handleChange)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminCompanies, \"2Tnaxj2EdvFHacTqB0bLRsbm3rg=\");\n\n_c = AdminCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminCompanies\");","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/components/App/content/User/Admin/AdminCompanies/AdminCompanies.js"],"names":["AdminCompanyActionbar","Form","Formik","createRef","useEffect","useRef","useState","AdminService","AuthenticationService","AdminCompanies","companies","setCompanies","id","name","email","password","getCompanies","then","result","data","error","response","setTimeout","alert","logOut","companiesRef","current","map","empty","i","handleChange","stream","index","checked","values","handleReset"],"mappings":"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","sourcesContent":["import AdminCompanyActionbar from './AdminCompanyActionbar/AdminCompanyActionbar'\r\nimport './admin-companies.css'\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useEffect, useRef, useState } from \"react\";\r\nimport AdminService from \"../../../../../../services/user-services/AdminService\";\r\nimport AuthenticationService from \"../../../../../../services/AuthenticationService\";\r\n\r\n\r\nexport default function AdminCompanies() {\r\n\r\n    const [companies, setCompanies] = useState([{\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    }])\r\n\r\n    useEffect(() => {\r\n        AdminService\r\n            .getCompanies().then(\r\n                result => {\r\n                    setCompanies(result.data)\r\n                },\r\n                error => {\r\n                    try {\r\n                        if (error.response.data.response) {\r\n                            return\r\n                        }\r\n                        if (error.response) {\r\n                            setTimeout(() => { alert(\"Login expired, please login again.\") }, 0)\r\n                            AuthenticationService.logOut();\r\n                        }\r\n\r\n                    } catch {\r\n                        setTimeout(() => { alert(\"Servers are currently down, try again later.\") }, 0)\r\n                        AuthenticationService.logOut();\r\n                    }\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const companiesRef = useRef([])\r\n    companiesRef.current = companies.map((empty, i) => companiesRef.current[i] ?? createRef());\r\n\r\n    const getCompanies = (handleChange) => {\r\n        if (companies[0].id === '')\r\n            return\r\n        return (companies.map((stream, index) => {\r\n            return (\r\n                <>\r\n                    <tr ref={companiesRef.current[index]}>\r\n                        <input type=\"checkbox\" name=\"checked\" value={index} id={stream.id} className='AdminCompanies-field-checkbox' onChange={handleChange} />\r\n                        <td></td>\r\n                        <td><label htmlFor={stream.id} className=\"AdminCompanies-table-id-label\" id='AdminCompanies-table-id-label' title={`ID: ${stream.id}`}>{stream.id}</label></td>\r\n                        <td><label htmlFor={stream.id} className=\"AdminCompanies-table-text-label\" id='AdminCompanies-table-text-label' title={`NAME: ${stream.name}`}>{stream.name}</label></td>\r\n                        <td><label htmlFor={stream.id} className=\"AdminCompanies-table-text-label\" id='AdminCompanies-table-text-label' title={`EMAIL: ${stream.email}`}>{stream.email}</label></td>\r\n                        {/* <td><label htmlFor={stream.id} className=\"AdminCompanies-table-text-label\" id='AdminCompanies-table-password-label' title={`PASSWORD: ${stream.password}`}>{stream.password}</label></td> */}\r\n                    </tr>\r\n                    <tr className=\"AdminCompanies-table-tr-seperator\"></tr>\r\n                </>\r\n            )\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className='AdminCompanies'>\r\n            <Formik initialValues={{ checked: [] }}>\r\n                {({ values, handleReset, handleChange }) => (<>\r\n                    <AdminCompanyActionbar values={values} companiesRef={companiesRef} companies={companies} setCompanies={setCompanies} handleReset={handleReset} />\r\n                    <Form>\r\n                        <table className='AdminCompanies-table'>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th className='AdminCompanies-table-header' id='AdminCompanies-table-header-id' width='5%' title='ID'>ID</th>\r\n                                    <th className='AdminCompanies-table-header' width='47.5%' title='Name'>Name</th>\r\n                                    <th className='AdminCompanies-table-header' width='47.5%' title='Email'>Email</th>\r\n                                </tr>\r\n                                {getCompanies(handleChange)}\r\n                            </tbody>\r\n                        </table>\r\n                    </Form>\r\n                </>)}\r\n            </Formik >\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}