{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spide\\\\Desktop\\\\Visual Studio Workspace\\\\GradeProjectStage3\\\\coupon-system-website\\\\src\\\\components\\\\App\\\\content\\\\User\\\\Admin\\\\AdminCustomers\\\\AdminCustomers.js\",\n    _s = $RefreshSig$();\n\nimport AdminCustomerActionbar from \"./AdminCustomerActionbar/AdminCustomerActionbar\";\nimport { Form, Formik } from \"formik\";\nimport './admin-customers.css';\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport AdminService from \"../../../../../../services/user-services/AdminService\";\nimport AuthenticationService from \"../../../../../../services/AuthenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminCustomers() {\n  _s();\n\n  const [customers, setCustomers] = useState([{\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  }]);\n  useEffect(() => {\n    AdminService.getCustomers().then(result => {\n      setCustomers(result.data);\n    }, error => {\n      console.log(1);\n      console.log(error);\n      console.log(1);\n      console.log(error.includes(\"Network Error\"));\n      if (\"abc\".includes(\"abc\")) console.log('test');\n\n      if (error.response.data.response) {\n        setTimeout(() => {\n          alert(\"Action Failed\\n\" + error.response.data.response);\n        }, 0);\n        return;\n      }\n\n      if (error.response) {\n        setTimeout(() => {\n          alert(\"Login expired, please login again.\");\n        }, 0);\n        AuthenticationService.logOut();\n      } else setTimeout(() => {\n        alert(\"Servers are currently down, try again later.\");\n      }, 0);\n    });\n  }, []);\n  const couponsRef = useRef([]);\n  couponsRef.current = customers.map((empty, i) => {\n    var _couponsRef$current$i;\n\n    return (_couponsRef$current$i = couponsRef.current[i]) !== null && _couponsRef$current$i !== void 0 ? _couponsRef$current$i : /*#__PURE__*/createRef();\n  });\n\n  const getCustomers = handleChange => {\n    if (customers[0].id === '') return;\n    return customers.map((stream, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          ref: couponsRef.current[1],\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"checked\",\n            value: index,\n            id: stream.id,\n            className: \"AdminCustomers-field-checkbox\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: stream.id,\n              className: \"AdminCustomers-table-id-label\",\n              id: \"AdminCustomers-table-id-label\",\n              title: `ID: ${stream.id}`,\n              children: stream.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: stream.id,\n              className: \"AdminCustomers-table-text-label\",\n              title: `FIRST NAME: ${stream.firstName}`,\n              children: stream.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: stream.id,\n              className: \"AdminCustomers-table-text-label\",\n              title: `LAST NAME: ${stream.lastName}`,\n              children: stream.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: stream.id,\n              className: \"AdminCustomers-table-text-label\",\n              title: `EMAIL: ${stream.email}`,\n              children: stream.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: stream.id,\n              className: \"AdminCustomers-table-text-label\",\n              id: \"AdminCustomers-table-password-label\",\n              title: `PASSWORD: ${stream.password}`,\n              children: stream.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"AdminCustomers-table-tr-seperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminCustomers\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        checked: []\n      },\n      children: ({\n        values\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AdminCustomerActionbar, {\n          values: values,\n          couponsRef: couponsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"AdminCustomers-table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"AdminCustomers-table-header\",\n                  id: \"AdminCustomers-table-header-id\",\n                  width: \"5%\",\n                  title: \"ID\",\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"AdminCustomers-table-header\",\n                  width: \"15%\",\n                  title: \"First Name\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"AdminCustomers-table-header\",\n                  width: \"15%\",\n                  title: \"Last Name\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"AdminCustomers-table-header\",\n                  width: \"32.5%\",\n                  title: \"Email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"AdminCustomers-table-header\",\n                  width: \"32.5%\",\n                  title: \"Password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), getCustomers()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminCustomers, \"ZyKijHZ3a/5i6QwPEnvBJWJNtGw=\");\n\n_c = AdminCustomers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminCustomers\");","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/components/App/content/User/Admin/AdminCustomers/AdminCustomers.js"],"names":["AdminCustomerActionbar","Form","Formik","createRef","useEffect","useRef","useState","AdminService","AuthenticationService","AdminCustomers","customers","setCustomers","id","firstName","lastName","email","password","getCustomers","then","result","data","error","console","log","includes","response","setTimeout","alert","logOut","couponsRef","current","map","empty","i","handleChange","stream","index","checked","values"],"mappings":"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","sourcesContent":["import AdminCustomerActionbar from \"./AdminCustomerActionbar/AdminCustomerActionbar\";\r\nimport { Form, Formik } from \"formik\";\r\nimport './admin-customers.css'\r\nimport { createRef, useEffect, useRef, useState } from \"react\";\r\nimport AdminService from \"../../../../../../services/user-services/AdminService\";\r\nimport AuthenticationService from \"../../../../../../services/AuthenticationService\";\r\n\r\n\r\nexport default function AdminCustomers() {\r\n\r\n    const [customers, setCustomers] = useState([{\r\n        id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n    }])\r\n\r\n    useEffect(() => {\r\n        AdminService\r\n            .getCustomers().then(\r\n                result => {\r\n                    setCustomers(result.data)\r\n                },\r\n                error => {\r\n                    console.log(1)\r\n                    console.log(error)\r\n                    console.log(1)\r\n                    console.log(error.includes(\"Network Error\"))\r\n                    if (\"abc\".includes(\"abc\"))\r\n                        console.log('test')\r\n                    if (error.response.data.response) {\r\n                        setTimeout(() => { alert(\"Action Failed\\n\" + error.response.data.response) }, 0)\r\n                        return\r\n                    }\r\n                    if (error.response) {\r\n                        setTimeout(() => { alert(\"Login expired, please login again.\") }, 0)\r\n                        AuthenticationService.logOut();\r\n                    }\r\n                    else\r\n                        setTimeout(() => { alert(\"Servers are currently down, try again later.\") }, 0)\r\n                })\r\n    }, [])\r\n\r\n    const couponsRef = useRef([])\r\n    couponsRef.current = customers.map((empty, i) => couponsRef.current[i] ?? createRef());\r\n\r\n    const getCustomers = (handleChange) => {\r\n        if (customers[0].id === '')\r\n            return\r\n        return (customers.map((stream, index) => {\r\n            return (\r\n                <>\r\n                    <tr ref={couponsRef.current[1]}>\r\n                        <input type=\"checkbox\" name=\"checked\" value={index} id={stream.id} className='AdminCustomers-field-checkbox' onChange={handleChange} />\r\n                        <td></td>\r\n                        <td><label htmlFor={stream.id} className=\"AdminCustomers-table-id-label\" id='AdminCustomers-table-id-label' title={`ID: ${stream.id}`}>{stream.id}</label></td>\r\n                        <td><label htmlFor={stream.id} className=\"AdminCustomers-table-text-label\" title={`FIRST NAME: ${stream.firstName}`}>{stream.firstName}</label></td>\r\n                        <td><label htmlFor={stream.id} className=\"AdminCustomers-table-text-label\" title={`LAST NAME: ${stream.lastName}`}>{stream.lastName}</label></td>\r\n                        <td><label htmlFor={stream.id} className=\"AdminCustomers-table-text-label\" title={`EMAIL: ${stream.email}`}>{stream.email}</label></td>\r\n                        <td><label htmlFor={stream.id} className=\"AdminCustomers-table-text-label\" id='AdminCustomers-table-password-label' title={`PASSWORD: ${stream.password}`}>{stream.password}</label></td>\r\n                    </tr>\r\n                    <tr className=\"AdminCustomers-table-tr-seperator\"></tr>\r\n                </>\r\n            )\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className='AdminCustomers'>\r\n            <Formik initialValues={{ checked: [] }}>\r\n                {({ values }) => (<>\r\n                    <AdminCustomerActionbar values={values} couponsRef={couponsRef} />\r\n                    <Form>\r\n                        <table className='AdminCustomers-table'>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th className='AdminCustomers-table-header' id='AdminCustomers-table-header-id' width='5%' title='ID'>ID</th>\r\n                                    <th className='AdminCustomers-table-header' width='15%' title='First Name'>First Name</th>\r\n                                    <th className='AdminCustomers-table-header' width='15%' title='Last Name'>Last Name</th>\r\n                                    <th className='AdminCustomers-table-header' width='32.5%' title='Email'>Email</th>\r\n                                    <th className='AdminCustomers-table-header' width='32.5%' title='Password'>Password</th>\r\n                                </tr>\r\n                                {getCustomers()}\r\n                            </tbody>\r\n                        </table>\r\n                    </Form>\r\n                </>)}\r\n            </Formik >\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}