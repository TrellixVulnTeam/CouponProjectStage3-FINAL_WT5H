{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spide\\\\Desktop\\\\Visual Studio Workspace\\\\GradeProjectStage3\\\\coupon-system-website\\\\src\\\\components\\\\App\\\\content\\\\Login\\\\Login.js\";\nimport './login.css';\nimport image from './../../../../assests/The Coupon Project Logo.png';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport history from '../../history';\nimport AuthenticationService from '../../../../services/AuthenticationService';\nimport { Route, Switch } from 'react-router';\nimport Signup from './Signup/Signup';\nimport CompanySignup from './Signup/CompanySignup/CompanySignup';\nimport CustomerSignup from './Signup/CustomerSignup/CustomerSignup';\nimport { isEmail } from '../../../../utils/checkUtil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  const handleSubmit = (values, {\n    setFieldValue\n  }) => {\n    AuthenticationService.logIn(values.email, values.password, values.type).then(() => {\n      switch (values.type) {\n        case 'CUSTOMER':\n          history.push('/customer/home');\n          break;\n\n        case 'COMPANY':\n          history.push('/company/home');\n          break;\n\n        case 'ADMIN':\n          history.push('/admin/home');\n          break;\n\n        default:\n          break;\n      }\n    }, error => {\n      if (error.response) setTimeout(() => {\n        alert(\"Login Failed\\n\" + error.response.data.response);\n      }, 0);else setTimeout(() => {\n        alert(\"Servers are currently down, try again later.\");\n      }, 0);\n      setFieldValue('password', '');\n    });\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email format').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login/signup/Customer\",\n        children: /*#__PURE__*/_jsxDEV(CustomerSignup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login/signup/company\",\n        children: /*#__PURE__*/_jsxDEV(CompanySignup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login/signup\",\n        children: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Login img\",\n        width: \"26%\",\n        className: \"Login-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Login-formik\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            password: '',\n            type: 'CUSTOMER'\n          },\n          onSubmit: (values, {\n            setFieldValue\n          }) => handleSubmit(values, {\n            setFieldValue\n          }),\n          validationSchema: validationSchema,\n          children: ({\n            isValid,\n            dirty,\n            values,\n            handleChange\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              id: \"Login-padding\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"Login-label\",\n                children: \"Enter Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: handleChange,\n                pattern: isEmail(),\n                type: \"email\",\n                name: \"email\",\n                className: \"form-control\",\n                placeholder: \"Email\",\n                autoComplete: \"true\",\n                title: values.email,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Login-alert\",\n              title: \"Required / Invalid email format\",\n              children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"email\",\n                className: \"alert alert-primary\",\n                id: \"Login-alert\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              id: \"Login-padding\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"Login-label\",\n                children: \"Enter Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"password\",\n                name: \"password\",\n                className: \"form-control\",\n                placeholder: \"Password\",\n                autoComplete: \"true\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Login-alert\",\n              title: \"Required\",\n              children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"password\",\n                className: \"alert alert-primary\",\n                id: \"Login-alert\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              id: \"Login-padding\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"Login-label\",\n                children: \"Login as...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-select\",\n                component: \"select\",\n                name: \"type\",\n                title: values.type,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"CUSTOMER\",\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"COMPANY\",\n                  children: \"Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ADMIN\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Login-submit\",\n              id: \"Login-padding\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                title: \"Signup\",\n                value: \"Signup\",\n                id: \"Login-signup\",\n                onClick: () => history.push(\"/login/signup\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                disabled: !(isValid && dirty),\n                title: \"Login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/components/App/content/Login/Login.js"],"names":["image","Yup","Formik","Form","Field","ErrorMessage","history","AuthenticationService","Route","Switch","Signup","CompanySignup","CustomerSignup","isEmail","Login","handleSubmit","values","setFieldValue","logIn","email","password","type","then","push","error","response","setTimeout","alert","data","validationSchema","object","string","required","isValid","dirty","handleChange"],"mappings":"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","sourcesContent":["import './login.css'\r\nimport image from './../../../../assests/The Coupon Project Logo.png'\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport history from '../../history';\r\nimport AuthenticationService from '../../../../services/AuthenticationService';\r\nimport { Route, Switch } from 'react-router';\r\nimport Signup from './Signup/Signup';\r\nimport CompanySignup from './Signup/CompanySignup/CompanySignup';\r\nimport CustomerSignup from './Signup/CustomerSignup/CustomerSignup';\r\nimport { isEmail } from '../../../../utils/checkUtil';\r\n\r\nexport default function Login() {\r\n\r\n    const handleSubmit = (values, { setFieldValue }) => {\r\n        AuthenticationService\r\n            .logIn(\r\n                values.email,\r\n                values.password,\r\n                values.type\r\n            )\r\n            .then(() => {\r\n                switch (values.type) {\r\n                    case 'CUSTOMER':\r\n                        history.push('/customer/home')\r\n                        break;\r\n                    case 'COMPANY':\r\n                        history.push('/company/home')\r\n                        break;\r\n                    case 'ADMIN':\r\n                        history.push('/admin/home')\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            },\r\n                error => {\r\n                    if (error.response)\r\n                        setTimeout(() => { alert(\"Login Failed\\n\" + error.response.data.response) }, 0)\r\n                    else\r\n                        setTimeout(() => { alert(\"Servers are currently down, try again later.\") }, 0)\r\n                    setFieldValue('password', '')\r\n                }\r\n            )\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid email format').required('Required'),\r\n        password: Yup.string().required('Required')\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path='/login/signup/Customer'>\r\n                    <CustomerSignup />\r\n                </Route>\r\n                <Route path='/login/signup/company'>\r\n                    <CompanySignup />\r\n                </Route>\r\n                <Route path='/login/signup'>\r\n                    <Signup />\r\n                </Route>\r\n            </Switch>\r\n            <div className='Login'>\r\n                <img src={image} alt='Login img' width='26%' className='Login-img' />\r\n                <div className='Login-formik'>\r\n                    <Formik initialValues={{ email: '', password: '', type: 'CUSTOMER' }}\r\n                        onSubmit={(values, { setFieldValue }) => handleSubmit(values, { setFieldValue })}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({ isValid, dirty, values, handleChange }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\" id='Login-padding'>\r\n                                    <label className='Login-label'>\r\n                                        Enter Email:\r\n                                    </label>\r\n                                    <input\r\n                                        onChange={handleChange}\r\n                                        pattern={isEmail()}\r\n                                        type='email'\r\n                                        name='email'\r\n                                        className='form-control'\r\n                                        placeholder='Email'\r\n                                        autoComplete='true'\r\n                                        title={values.email}\r\n                                        required={true}\r\n                                    />\r\n                                </div>\r\n                                <div className='Login-alert' title='Required / Invalid email format'>\r\n                                    <ErrorMessage component='div' name='email' className='alert alert-primary' id='Login-alert' />\r\n                                </div>\r\n                                <div className=\"form-group\" id='Login-padding'>\r\n                                    <label className='Login-label'>\r\n                                        Enter Password:\r\n                                    </label>\r\n                                    <Field\r\n                                        type='password'\r\n                                        name='password'\r\n                                        className='form-control'\r\n                                        placeholder='Password'\r\n                                        autoComplete='true'\r\n                                        required={true}\r\n                                    />\r\n                                </div>\r\n                                <div className='Login-alert' title='Required'>\r\n                                    <ErrorMessage component='div' name='password' className='alert alert-primary' id='Login-alert' />\r\n                                </div>\r\n                                <div className=\"form-group\" id='Login-padding'>\r\n                                    <label className='Login-label'>\r\n                                        Login as...\r\n                                    </label>\r\n                                    <Field\r\n                                        className='form-select'\r\n                                        component=\"select\"\r\n                                        name=\"type\"\r\n                                        title={values.type}\r\n                                    >\r\n                                        <option value=\"CUSTOMER\">Customer</option>\r\n                                        <option value=\"COMPANY\">Company</option>\r\n                                        <option value=\"ADMIN\">Admin</option>\r\n                                    </Field>\r\n                                </div>\r\n                                <div className='Login-submit' id='Login-padding'>\r\n                                    <input type=\"button\" className='btn btn-primary' title='Signup' value=\"Signup\" id='Login-signup' onClick={() => history.push(\"/login/signup\")} />\r\n                                    <button type='submit' className='btn btn-primary' disabled={!(isValid && dirty)} title='Login'>\r\n                                        Login\r\n                                    </button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}