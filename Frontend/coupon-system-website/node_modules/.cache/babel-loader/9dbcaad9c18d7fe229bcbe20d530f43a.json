{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spide\\\\Desktop\\\\Visual Studio Workspace\\\\GradeProjectStage3\\\\coupon-system-website\\\\src\\\\components\\\\App\\\\content\\\\User\\\\Admin\\\\AdminCompanies\\\\AdminCompanyActionbar\\\\AdminCompanyActionbar.js\";\nimport './../../../../../../../styles/action-sidebar.css';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport history from '../../../../../history';\nimport AdminCreateCompany from './AdminCreateCompany/AdminCreateCompany';\nimport AdminUpdateCompany from './AdminUpdateCompany/AdminUpdateCompany';\nimport AdminService from '../../../../../../../services/user-services/AdminService';\nimport AuthenticationService from '../../../../../../../services/AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminCompanyActionbar() {\n  const resetSelection = () => {\n    for (let index of Object.values(props.values.checked)) {\n      if (props.customersRef.current[index]) {\n        const currentRef = props.customersRef.current[index].current;\n        currentRef.children[0].checked = false;\n      }\n    }\n\n    props.handleReset();\n  };\n\n  const handleAllCompanies = () => {\n    AdminService.getCustomers().then(result => {\n      props.setCustomers(result.data);\n      resetSelection();\n    }, error => {\n      if (error.response.data.response) {\n        setTimeout(() => {\n          alert(\"There are not any customers.\");\n        }, 0);\n        return;\n      }\n\n      if (error.response) {\n        setTimeout(() => {\n          alert(\"Login expired, please login again.\");\n        }, 0);\n        AuthenticationService.logOut();\n      } else setTimeout(() => {\n        alert(\"Servers are currently down, try again later.\");\n      }, 0);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AdminCompanyActionbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-sidebar-button\",\n          title: \"All Companies\",\n          onClick: handleAllCompanies,\n          children: \"All Companies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-sidebar-button-seperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-sidebar-button\",\n          title: \"Search ID\",\n          onClick: handleSearchId,\n          children: \"Search ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-sidebar-button-seperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-sidebar-button\",\n          title: \"Search Email\",\n          onClick: handleSearchEmail,\n          children: \"Search Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-sidebar-button-seperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-sidebar-button\",\n          title: \"Create Company\",\n          onClick: () => history.push('/admin/companies/create-company'),\n          children: \"Create Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-sidebar-button-seperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-sidebar-button\",\n          title: \"Update Company\",\n          onClick: handleUpdateCompany,\n          children: \"Update Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-sidebar-button-seperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-sidebar-button\",\n          title: \"Delete Companies\",\n          onClick: handleDeleteCompanies,\n          children: \"Delete Companies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/companies\",\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/admin/companies/create-company',\n        children: /*#__PURE__*/_jsxDEV(AdminCreateCompany, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/admin/companies/update-company',\n        children: /*#__PURE__*/_jsxDEV(AdminUpdateCompany, {\n          companiesRef: props.companiesRef,\n          values: props.values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/admin/companies',\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/admin/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = AdminCompanyActionbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminCompanyActionbar\");","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/components/App/content/User/Admin/AdminCompanies/AdminCompanyActionbar/AdminCompanyActionbar.js"],"names":["Redirect","Route","Switch","history","AdminCreateCompany","AdminUpdateCompany","AdminService","AuthenticationService","AdminCompanyActionbar","resetSelection","index","Object","values","props","checked","customersRef","current","currentRef","children","handleReset","handleAllCompanies","getCustomers","then","result","setCustomers","data","error","response","setTimeout","alert","logOut","handleSearchId","handleSearchEmail","push","handleUpdateCompany","handleDeleteCompanies","companiesRef"],"mappings":";AAAA,OAAO,kDAAP;AACA,SAASA,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,YAAP,MAAyB,0DAAzB;AACA,OAAOC,qBAAP,MAAkC,qDAAlC;;;AAGA,eAAe,SAASC,qBAAT,GAAiC;AAE5C,QAAMC,cAAc,GAAG,MAAM;AACzB,SAAK,IAAIC,KAAT,IAAkBC,MAAM,CAACC,MAAP,CAAcC,KAAK,CAACD,MAAN,CAAaE,OAA3B,CAAlB,EAAuD;AACnD,UAAID,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BN,KAA3B,CAAJ,EAAuC;AACnC,cAAMO,UAAU,GAAGJ,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BN,KAA3B,EAAkCM,OAArD;AACAC,QAAAA,UAAU,CAACC,QAAX,CAAoB,CAApB,EAAuBJ,OAAvB,GAAiC,KAAjC;AACH;AACJ;;AACDD,IAAAA,KAAK,CAACM,WAAN;AACH,GARD;;AAUA,QAAMC,kBAAkB,GAAG,MAAM;AAC7Bd,IAAAA,YAAY,CACPe,YADL,GACoBC,IADpB,CAEQC,MAAM,IAAI;AACNV,MAAAA,KAAK,CAACW,YAAN,CAAmBD,MAAM,CAACE,IAA1B;AACAhB,MAAAA,cAAc;AACjB,KALT,EAMQiB,KAAK,IAAI;AACL,UAAIA,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAoBE,QAAxB,EAAkC;AAC9BC,QAAAA,UAAU,CAAC,MAAM;AAAEC,UAAAA,KAAK,CAAC,8BAAD,CAAL;AAAuC,SAAhD,EAAkD,CAAlD,CAAV;AACA;AACH;;AACD,UAAIH,KAAK,CAACC,QAAV,EAAoB;AAChBC,QAAAA,UAAU,CAAC,MAAM;AAAEC,UAAAA,KAAK,CAAC,oCAAD,CAAL;AAA6C,SAAtD,EAAwD,CAAxD,CAAV;AACAtB,QAAAA,qBAAqB,CAACuB,MAAtB;AACH,OAHD,MAKIF,UAAU,CAAC,MAAM;AAAEC,QAAAA,KAAK,CAAC,8CAAD,CAAL;AAAuD,OAAhE,EAAkE,CAAlE,CAAV;AACP,KAjBT;AAmBH,GApBD;;AAsBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,KAAK,EAAC,eAAhD;AAAgE,UAAA,OAAO,EAAET,kBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,KAAK,EAAC,WAAhD;AAA4D,UAAA,OAAO,EAAEW,cAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,KAAK,EAAC,cAAhD;AAA+D,UAAA,OAAO,EAAEC,iBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,KAAK,EAAC,gBAAhD;AAAiE,UAAA,OAAO,EAAE,MAAM7B,OAAO,CAAC8B,IAAR,CAAa,iCAAb,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,KAAK,EAAC,gBAAhD;AAAiE,UAAA,OAAO,EAAEC,mBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,KAAK,EAAC,kBAAhD;AAAmE,UAAA,OAAO,EAAEC,qBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,kBAAZ;AAA+B,QAAA,KAAK;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,iCAAb;AAAA,+BACI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,iCAAb;AAAA,+BACI,QAAC,kBAAD;AAAoB,UAAA,YAAY,EAAEtB,KAAK,CAACuB,YAAxC;AAAsD,UAAA,MAAM,EAAEvB,KAAK,CAACD;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eASI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,kBAAb;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AAgCH;KAlEuBJ,qB","sourcesContent":["import './../../../../../../../styles/action-sidebar.css'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport history from '../../../../../history'\r\nimport AdminCreateCompany from './AdminCreateCompany/AdminCreateCompany'\r\nimport AdminUpdateCompany from './AdminUpdateCompany/AdminUpdateCompany'\r\nimport AdminService from '../../../../../../../services/user-services/AdminService'\r\nimport AuthenticationService from '../../../../../../../services/AuthenticationService'\r\n\r\n\r\nexport default function AdminCompanyActionbar() {\r\n\r\n    const resetSelection = () => {\r\n        for (let index of Object.values(props.values.checked)) {\r\n            if (props.customersRef.current[index]) {\r\n                const currentRef = props.customersRef.current[index].current\r\n                currentRef.children[0].checked = false\r\n            }\r\n        }\r\n        props.handleReset()\r\n    }\r\n\r\n    const handleAllCompanies = () => {\r\n        AdminService\r\n            .getCustomers().then(\r\n                result => {\r\n                    props.setCustomers(result.data)\r\n                    resetSelection()\r\n                },\r\n                error => {\r\n                    if (error.response.data.response) {\r\n                        setTimeout(() => { alert(\"There are not any customers.\") }, 0)\r\n                        return\r\n                    }\r\n                    if (error.response) {\r\n                        setTimeout(() => { alert(\"Login expired, please login again.\") }, 0)\r\n                        AuthenticationService.logOut();\r\n                    }\r\n                    else\r\n                        setTimeout(() => { alert(\"Servers are currently down, try again later.\") }, 0)\r\n                }\r\n            )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='AdminCompanyActionbar'>\r\n                <div className='action-sidebar'>\r\n                    <button className='action-sidebar-button' title='All Companies' onClick={handleAllCompanies}>All Companies</button>\r\n                    <div className='action-sidebar-button-seperator'></div>\r\n                    <button className='action-sidebar-button' title='Search ID' onClick={handleSearchId}>Search ID</button>\r\n                    <div className='action-sidebar-button-seperator'></div>\r\n                    <button className='action-sidebar-button' title='Search Email' onClick={handleSearchEmail}>Search Email</button>\r\n                    <div className='action-sidebar-button-seperator'></div>\r\n                    <button className='action-sidebar-button' title='Create Company' onClick={() => history.push('/admin/companies/create-company')}>Create Company</button>\r\n                    <div className='action-sidebar-button-seperator'></div>\r\n                    <button className='action-sidebar-button' title='Update Company' onClick={handleUpdateCompany}>Update Company</button>\r\n                    <div className='action-sidebar-button-seperator'></div>\r\n                    <button className='action-sidebar-button' title='Delete Companies' onClick={handleDeleteCompanies}>Delete Companies</button>\r\n                </div>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/admin/companies' exact>\r\n                </Route>\r\n                <Route path={'/admin/companies/create-company'}>\r\n                    <AdminCreateCompany />\r\n                </Route>\r\n                <Route path={'/admin/companies/update-company'}>\r\n                    <AdminUpdateCompany companiesRef={props.companiesRef} values={props.values} />\r\n                </Route>\r\n                <Route path={'/admin/companies'}>\r\n                    <Redirect to='/admin/home' />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}