{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spide\\\\Desktop\\\\Visual Studio Workspace\\\\GradeProjectStage3\\\\coupon-system-website\\\\src\\\\components\\\\App\\\\content\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport './login.css';\nimport image from './../../../../assests/The Coupon Project Logo.png';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email format').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  const [redirect, setRedirect] = useState(null);\n\n  const handleSubmit = (values, {\n    setFieldValue\n  }) => {\n    //if login is successful\n    if (true) {\n      switch (values.type) {\n        case 'Customer':\n          setRedirect('customer');\n          break;\n\n        case 'Company':\n          setRedirect('company');\n          break;\n\n        case 'Admin':\n          setRedirect('admin');\n          break;\n\n        default:\n          setRedirect(null);\n          break;\n      }\n\n      return;\n    } //if login is unsuccessful\n\n\n    setFieldValue('password', '');\n    setTimeout(() => {\n      alert(\"Email or Password are incorrect, try again.\");\n    }, 0);\n  };\n\n  const getRedirect = () => {\n    switch (redirect) {\n      case 'customer':\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this);\n\n      case 'company':\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this);\n\n      case 'admin':\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Login img\",\n      width: \"500\",\n      className: \"Login-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-formik\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: 'email@email.com',\n          password: '',\n          type: 'Customer'\n        },\n        onSubmit: (values, {\n          setFieldValue\n        }) => handleSubmit(values, {\n          setFieldValue\n        }),\n        validationSchema: validationSchema,\n        children: ({\n          isValid,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              className: \"form-control\",\n              placeholder: \"Email\",\n              autoComplete: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"email\",\n            className: \"alert alert-primary\",\n            id: \"Login-alert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              className: \"form-control\",\n              placeholder: \"Password\",\n              autoComplete: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login-alerts\",\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"password\",\n              className: \"alert alert-primary\",\n              id: \"Login-alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Login as...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-select\",\n              component: \"select\",\n              name: \"type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Customer\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Company\",\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login-submit\",\n            id: \"Login-padding\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: !(isValid && dirty),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), props.history.push('/absdcsd')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Login, \"3AMv5GWOcW7RyVzpEc+cBrDcBFA=\");\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/components/App/content/Login/Login.js"],"names":["image","Yup","Formik","Form","Field","ErrorMessage","useState","Redirect","withRouter","Login","validationSchema","object","email","string","required","password","redirect","setRedirect","handleSubmit","values","setFieldValue","type","setTimeout","alert","getRedirect","isValid","dirty","props","history","push"],"mappings":"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","sourcesContent":["import './login.css'\r\nimport image from './../../../../assests/The Coupon Project Logo.png'\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid email format').required('Required'),\r\n        password: Yup.string().required('Required')\r\n    })\r\n\r\n    const [redirect, setRedirect] = useState(null)\r\n\r\n    const handleSubmit = (values, { setFieldValue }) => {\r\n        //if login is successful\r\n        if (true) {\r\n            switch (values.type) {\r\n                case 'Customer':\r\n                    setRedirect('customer')\r\n                    break;\r\n                case 'Company':\r\n                    setRedirect('company')\r\n                    break;\r\n                case 'Admin':\r\n                    setRedirect('admin')\r\n                    break;\r\n                default:\r\n                    setRedirect(null)\r\n                    break;\r\n            }\r\n            return\r\n        }\r\n        //if login is unsuccessful\r\n        setFieldValue('password', '')\r\n        setTimeout(() => { alert(\"Email or Password are incorrect, try again.\") }, 0)\r\n    };\r\n\r\n    const getRedirect = () => {\r\n        switch (redirect) {\r\n            case 'customer':\r\n                return <Redirect to='/customer' />\r\n            case 'company':\r\n                return <Redirect to='/company' />\r\n            case 'admin':\r\n                return <Redirect to='/admin' />\r\n            default:\r\n                return <Redirect to='/login' />\r\n        }\r\n    }\r\n\r\n    return (<div className='Login'>\r\n        <img src={image} alt='Login img' width='500' className='Login-img' />\r\n        <div className='Login-formik'>\r\n            <Formik initialValues={{ email: 'email@email.com', password: '', type: 'Customer' }}\r\n                onSubmit={(values, { setFieldValue }) => handleSubmit(values, { setFieldValue })}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({ isValid, dirty }) => (\r\n                    <Form>\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label>\r\n                                Enter Email:\r\n                            </label>\r\n                            <Field\r\n                                type='email'\r\n                                name='email'\r\n                                className='form-control'\r\n                                placeholder='Email'\r\n                                autoComplete='true'\r\n                            />\r\n                        </div>\r\n                        <ErrorMessage component='div' name='email' className='alert alert-primary' id='Login-alert' />\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label>\r\n                                Enter Password:\r\n                            </label>\r\n                            <Field\r\n                                type='password'\r\n                                name='password'\r\n                                className='form-control'\r\n                                placeholder='Password'\r\n                                autoComplete='true'\r\n                            />\r\n                        </div>\r\n                        <div className='Login-alerts'>\r\n                            <ErrorMessage component='div' name='password' className='alert alert-primary' id='Login-alert' />\r\n                        </div>\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label>\r\n                                Login as...\r\n                            </label>\r\n                            <Field\r\n                                className='form-select'\r\n                                component=\"select\"\r\n                                name=\"type\"\r\n                            >\r\n                                <option value=\"Customer\">Customer</option>\r\n                                <option value=\"Company\">Company</option>\r\n                                <option value=\"Admin\">Admin</option>\r\n                            </Field>\r\n                        </div>\r\n                        <div className='Login-submit' id='Login-padding'>\r\n                            <button type='submit' className='btn btn-primary' disabled={!(isValid && dirty)} >\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n        {props.history.push('/absdcsd')}\r\n        {/* {getRedirect()} */}\r\n    </div >)\r\n}\r\n\r\nexport default withRouter(Login)"]},"metadata":{},"sourceType":"module"}