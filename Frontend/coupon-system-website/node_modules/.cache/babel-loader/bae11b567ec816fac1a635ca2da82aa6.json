{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spide\\\\Desktop\\\\Visual Studio Workspace\\\\GradeProjectStage3\\\\coupon-system-website\\\\src\\\\components\\\\App\\\\content\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport './login.css';\nimport image from './../../../../assests/The Coupon Project Logo.png';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { Redirect, Route, Router, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email format').required('Required'),\n  password: Yup.string().required('Required')\n}); // export default function Login(props) {\n//     const handleSubmit = (values, { setFieldValue }) => {\n//         //if login is successful\n//         if (true) {\n//             switch (values.type) {\n//                 case 'Customer':\n//                     props.setContent('Customer')\n//                     break;\n//                 case 'Company':\n//                     props.setContent('Company')\n//                     break;\n//                 case 'Admin':\n//                     props.setContent('Admin')\n//                     break;\n//                 default:\n//                     window.location.reload()\n//                     break;\n//             }\n//             return\n//         }\n//         //if login is unsuccessful\n//         setFieldValue('password', '')\n//         setTimeout(() => { alert(\"Email or Password are incorrect, try again.\") }, 0)\n//     };\n\nexport default function Login(props) {\n  _s();\n\n  const [redirect, setRedirect] = useState(null);\n\n  const handleSubmit = (values, {\n    setFieldValue\n  }) => {\n    //if login is successful\n    if (true) {\n      switch (values.type) {\n        case 'Customer':\n          setRedirect('customer');\n          break;\n\n        case 'Company':\n          setRedirect('company');\n          break;\n\n        case 'Admin':\n          setRedirect('admin');\n          break;\n\n        default:\n          window.location.reload();\n          break;\n      }\n\n      return;\n    } //if login is unsuccessful\n\n\n    setFieldValue('password', '');\n    setTimeout(() => {\n      alert(\"Email or Password are incorrect, try again.\");\n    }, 0);\n  };\n\n  const getRedirect = () => {\n    switch (redirect) {\n      case 'customer':\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this);\n\n      case 'comapny':\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this);\n\n      case 'admin':\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Login img\",\n        width: \"500\",\n        className: \"Login-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Login-formik\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: 'email@email.com',\n            password: '',\n            type: 'Customer'\n          },\n          onSubmit: (values, {\n            setFieldValue\n          }) => handleSubmit(values, {\n            setFieldValue\n          }),\n          validationSchema: validationSchema,\n          children: ({\n            isValid,\n            dirty\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              id: \"Login-padding\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"email\",\n                name: \"email\",\n                className: \"form-control\",\n                placeholder: \"Email\",\n                autoComplete: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"email\",\n              className: \"alert alert-primary\",\n              id: \"Login-alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              id: \"Login-padding\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"password\",\n                name: \"password\",\n                className: \"form-control\",\n                placeholder: \"Password\",\n                autoComplete: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Login-alerts\",\n              children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"password\",\n                className: \"alert alert-primary\",\n                id: \"Login-alert\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              id: \"Login-padding\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Login as...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-select\",\n                component: \"select\",\n                name: \"type\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Customer\",\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Company\",\n                  children: \"Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Login-submit\",\n              id: \"Login-padding\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                disabled: !(isValid && dirty),\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), getRedirect()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this);\n  };\n}\n\n_s(Login, \"3AMv5GWOcW7RyVzpEc+cBrDcBFA=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/components/App/content/Login/Login.js"],"names":["image","Yup","Formik","Form","Field","ErrorMessage","useEffect","useState","Redirect","Route","Router","Switch","validationSchema","object","email","string","required","password","Login","props","redirect","setRedirect","handleSubmit","values","setFieldValue","type","window","location","reload","setTimeout","alert","getRedirect","isValid","dirty"],"mappings":"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","sourcesContent":["import './login.css'\r\nimport image from './../../../../assests/The Coupon Project Logo.png'\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { Redirect, Route, Router, Switch } from 'react-router-dom';\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Required'),\r\n    password: Yup.string().required('Required')\r\n})\r\n\r\n\r\n\r\n// export default function Login(props) {\r\n//     const handleSubmit = (values, { setFieldValue }) => {\r\n//         //if login is successful\r\n//         if (true) {\r\n//             switch (values.type) {\r\n//                 case 'Customer':\r\n//                     props.setContent('Customer')\r\n//                     break;\r\n//                 case 'Company':\r\n//                     props.setContent('Company')\r\n//                     break;\r\n//                 case 'Admin':\r\n//                     props.setContent('Admin')\r\n//                     break;\r\n//                 default:\r\n//                     window.location.reload()\r\n//                     break;\r\n//             }\r\n//             return\r\n//         }\r\n//         //if login is unsuccessful\r\n//         setFieldValue('password', '')\r\n//         setTimeout(() => { alert(\"Email or Password are incorrect, try again.\") }, 0)\r\n//     };\r\n\r\nexport default function Login(props) {\r\n    const [redirect, setRedirect] = useState(null)\r\n\r\n    const handleSubmit = (values, { setFieldValue }) => {\r\n        //if login is successful\r\n        if (true) {\r\n            switch (values.type) {\r\n                case 'Customer':\r\n                    setRedirect('customer')\r\n                    break;\r\n                case 'Company':\r\n                    setRedirect('company')\r\n                    break;\r\n                case 'Admin':\r\n                    setRedirect('admin')\r\n                    break;\r\n                default:\r\n                    window.location.reload()\r\n                    break;\r\n            }\r\n            return\r\n        }\r\n        //if login is unsuccessful\r\n        setFieldValue('password', '')\r\n        setTimeout(() => { alert(\"Email or Password are incorrect, try again.\") }, 0)\r\n    };\r\n\r\n    const getRedirect = () => {\r\n        switch (redirect) {\r\n            case 'customer':\r\n                return <Redirect to='/customer' />\r\n            case 'comapny':\r\n                return <Redirect to='/company' />\r\n            case 'admin':\r\n                return <Redirect to='/admin' />\r\n            default:\r\n                return null\r\n\r\n        }\r\n\r\n        return (<div className='Login'>\r\n            <img src={image} alt='Login img' width='500' className='Login-img' />\r\n            <div className='Login-formik'>\r\n                <Formik initialValues={{ email: 'email@email.com', password: '', type: 'Customer' }}\r\n                    onSubmit={(values, { setFieldValue }) => handleSubmit(values, { setFieldValue })}\r\n                    validationSchema={validationSchema}\r\n                >\r\n                    {({ isValid, dirty }) => (\r\n                        <Form>\r\n                            <div className=\"form-group\" id='Login-padding'>\r\n                                <label>\r\n                                    Enter Email:\r\n                                </label>\r\n                                <Field\r\n                                    type='email'\r\n                                    name='email'\r\n                                    className='form-control'\r\n                                    placeholder='Email'\r\n                                    autoComplete='true'\r\n                                />\r\n                            </div>\r\n                            <ErrorMessage component='div' name='email' className='alert alert-primary' id='Login-alert' />\r\n                            <div className=\"form-group\" id='Login-padding'>\r\n                                <label>\r\n                                    Enter Password:\r\n                                </label>\r\n                                <Field\r\n                                    type='password'\r\n                                    name='password'\r\n                                    className='form-control'\r\n                                    placeholder='Password'\r\n                                    autoComplete='true'\r\n                                />\r\n                            </div>\r\n                            <div className='Login-alerts'>\r\n                                <ErrorMessage component='div' name='password' className='alert alert-primary' id='Login-alert' />\r\n                            </div>\r\n                            <div className=\"form-group\" id='Login-padding'>\r\n                                <label>\r\n                                    Login as...\r\n                                </label>\r\n                                <Field\r\n                                    className='form-select'\r\n                                    component=\"select\"\r\n                                    name=\"type\"\r\n                                >\r\n                                    <option value=\"Customer\">Customer</option>\r\n                                    <option value=\"Company\">Company</option>\r\n                                    <option value=\"Admin\">Admin</option>\r\n                                </Field>\r\n                            </div>\r\n                            <div className='Login-submit' id='Login-padding'>\r\n                                <button type='submit' className='btn btn-primary' disabled={!(isValid && dirty)} >\r\n                                    Login\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n            {getRedirect()}\r\n        </div >)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}