{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  constructor() {\n    this.login = (email, password, userType) => {\n      return axios.post(\"http://localhost:8080/login-manager/login\", {\n        email,\n        password,\n        userType\n      }).then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      }).catch(err => {\n        console.log(err);\n        throw err;\n      });\n    };\n\n    this.registerCustomer = async (firstName, lastName, email, password) => {\n      return axios.post(\"http://localhost:8080/admin/add-customer\", {\n        firstName,\n        lastName,\n        email,\n        password\n      });\n    };\n\n    this.registerCompany = async (name, email, password) => {\n      return axios.post(\"http://localhost:8080/admin/create-company\", {\n        name,\n        email,\n        password\n      });\n    };\n  }\n\n  logOut() {\n    localStorage.removeItem(\"user\");\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/services/AuthenticationService.js"],"names":["axios","AuthenticationService","login","email","password","userType","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","catch","err","console","log","registerCustomer","firstName","lastName","registerCompany","name","logOut","removeItem","getCurrentUser","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA4B;AAAA;AAAA,SACxBC,KADwB,GAChB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AACnC,aAAOL,KAAK,CAACM,IAAN,CAAW,2CAAX,EAAwD;AAAEH,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBC,QAAAA;AAAnB,OAAxD,EACFE,IADE,CACGC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC3BC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AACD,eAAOD,QAAQ,CAACC,IAAhB;AACH,OANE,EAOFM,KAPE,CAOIC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,cAAMA,GAAN;AACH,OAVE,CAAP;AAWH,KAbuB;;AAAA,SAmBxBG,gBAnBwB,GAmBL,OAAOC,SAAP,EAAkBC,QAAlB,EAA4BlB,KAA5B,EAAmCC,QAAnC,KAAgD;AAC/D,aAAOJ,KAAK,CAACM,IAAN,CAAW,0CAAX,EAAuD;AAC1Dc,QAAAA,SAD0D;AAC/CC,QAAAA,QAD+C;AACrClB,QAAAA,KADqC;AAC9BC,QAAAA;AAD8B,OAAvD,CAAP;AAGH,KAvBuB;;AAAA,SAyBxBkB,eAzBwB,GAyBN,OAAOC,IAAP,EAAapB,KAAb,EAAoBC,QAApB,KAAiC;AAC/C,aAAOJ,KAAK,CAACM,IAAN,CAAW,4CAAX,EAAyD;AAC5DiB,QAAAA,IAD4D;AACtDpB,QAAAA,KADsD;AAC/CC,QAAAA;AAD+C,OAAzD,CAAP;AAGH,KA7BuB;AAAA;;AAexBoB,EAAAA,MAAM,GAAG;AACLb,IAAAA,YAAY,CAACc,UAAb,CAAwB,MAAxB;AACH;;AAcDC,EAAAA,cAAc,GAAG;AACb,WAAOb,IAAI,CAACc,KAAL,CAAWhB,YAAY,CAACiB,OAAb,CAAqB,MAArB,CAAX,CAAP;AAAgD;AACnD;;AAjCuB;;AAoC5B,eAAe,IAAI3B,qBAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\nclass AuthenticationService {\r\n    login = (email, password, userType) => {\r\n        return axios.post(\"http://localhost:8080/login-manager/login\", { email, password, userType })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n                return response.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    logOut() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    registerCustomer = async (firstName, lastName, email, password) => {\r\n        return axios.post(\"http://localhost:8080/admin/add-customer\", {\r\n            firstName, lastName, email, password\r\n        });\r\n    }\r\n\r\n    registerCompany = async (name, email, password) => {\r\n        return axios.post(\"http://localhost:8080/admin/create-company\", {\r\n            name, email, password\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));;\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService();"]},"metadata":{},"sourceType":"module"}