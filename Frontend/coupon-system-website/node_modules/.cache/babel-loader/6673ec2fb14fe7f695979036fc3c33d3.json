{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spide\\\\Desktop\\\\Visual Studio Workspace\\\\GradeProjectStage3\\\\coupon-system-website\\\\src\\\\components\\\\App\\\\content\\\\Login\\\\Login.js\";\nimport './login.css';\nimport image from './../../../../assests/The Coupon Project Logo.png';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport history from '../../history';\nimport AuthenticationService from '../../../../services/AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  const handleSubmit = (values, {\n    setFieldValue\n  }) => {\n    AuthenticationService.login(values.email, values.password, values.type).then(() => {\n      switch (values.type) {\n        case 'CUSTOMER':\n          history.push('/customer/home');\n          break;\n\n        case 'COMPANY':\n          history.push('/company/home');\n          break;\n\n        case 'ADMIN':\n          history.push('/admin/home');\n          break;\n\n        default:\n          history.push('/login');\n          break;\n      }\n    }, error => {\n      if (error.response) setTimeout(() => {\n        alert(\"Login Failed\\n\" + error.response.data.response);\n      }, 0);else setTimeout(() => {\n        alert(\"Servers are currently down, try again later.\");\n      }, 0);\n      setFieldValue('password', '');\n    });\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email format').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Login img\",\n      width: \"26%\",\n      className: \"Login-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-formik\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: '',\n          type: 'CUSTOMER'\n        },\n        onSubmit: (values, {\n          setFieldValue\n        }) => handleSubmit(values, {\n          setFieldValue\n        }),\n        validationSchema: validationSchema,\n        children: ({\n          isValid,\n          dirty,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Login-label\",\n              children: \"Enter Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              className: \"form-control\",\n              placeholder: \"Email\",\n              autoComplete: \"true\",\n              title: values.email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login-alert\",\n            title: \"Required / Invalid email format\",\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"email\",\n              className: \"alert alert-primary\",\n              id: \"Login-alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Login-label\",\n              children: \"Enter Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              className: \"form-control\",\n              placeholder: \"Password\",\n              autoComplete: \"true\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login-alert\",\n            title: \"Required\",\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"password\",\n              className: \"alert alert-primary\",\n              id: \"Login-alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"Login-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Login-label\",\n              children: \"Login as...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-select\",\n              component: \"select\",\n              name: \"type\",\n              title: values.type,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CUSTOMER\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"COMPANY\",\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ADMIN\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login-submit\",\n            id: \"Login-padding\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: !(isValid && dirty),\n              title: \"Login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/spide/Desktop/Visual Studio Workspace/GradeProjectStage3/coupon-system-website/src/components/App/content/Login/Login.js"],"names":["image","Yup","Formik","Form","Field","ErrorMessage","history","AuthenticationService","Login","handleSubmit","values","setFieldValue","login","email","password","type","then","push","error","response","setTimeout","alert","data","validationSchema","object","string","required","isValid","dirty"],"mappings":"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","sourcesContent":["import './login.css'\r\nimport image from './../../../../assests/The Coupon Project Logo.png'\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport history from '../../history';\r\nimport AuthenticationService from '../../../../services/AuthenticationService';\r\n\r\nexport default function Login() {\r\n    const handleSubmit = (values, { setFieldValue }) => {\r\n        AuthenticationService\r\n            .login(\r\n                values.email,\r\n                values.password,\r\n                values.type\r\n            )\r\n            .then(() => {\r\n                switch (values.type) {\r\n                    case 'CUSTOMER':\r\n                        history.push('/customer/home')\r\n                        break;\r\n                    case 'COMPANY':\r\n                        history.push('/company/home')\r\n                        break;\r\n                    case 'ADMIN':\r\n                        history.push('/admin/home')\r\n                        break;\r\n                    default:\r\n                        history.push('/login')\r\n                        break;\r\n                }\r\n            },\r\n                error => {\r\n                    if (error.response)\r\n                        setTimeout(() => { alert(\"Login Failed\\n\" + error.response.data.response) }, 0)\r\n                    else\r\n                        setTimeout(() => { alert(\"Servers are currently down, try again later.\") }, 0)\r\n                    setFieldValue('password', '')\r\n                }\r\n            )\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid email format').required('Required'),\r\n        password: Yup.string().required('Required')\r\n    })\r\n\r\n    return (<div className='Login'>\r\n        <img src={image} alt='Login img' width='26%' className='Login-img' />\r\n        <div className='Login-formik'>\r\n            <Formik initialValues={{ email: '', password: '', type: 'CUSTOMER' }}\r\n                onSubmit={(values, { setFieldValue }) => handleSubmit(values, { setFieldValue })}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({ isValid, dirty, values }) => (\r\n                    <Form>\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label className='Login-label'>\r\n                                Enter Email:\r\n                            </label>\r\n                            <Field\r\n                                type='email'\r\n                                name='email'\r\n                                className='form-control'\r\n                                placeholder='Email'\r\n                                autoComplete='true'\r\n                                title={values.email}\r\n                                required={true}\r\n                            />\r\n                        </div>\r\n                        <div className='Login-alert' title='Required / Invalid email format'>\r\n                            <ErrorMessage component='div' name='email' className='alert alert-primary' id='Login-alert' />\r\n                        </div>\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label className='Login-label'>\r\n                                Enter Password:\r\n                            </label>\r\n                            <Field\r\n                                type='password'\r\n                                name='password'\r\n                                className='form-control'\r\n                                placeholder='Password'\r\n                                autoComplete='true'\r\n                                required={true}\r\n                            />\r\n                        </div>\r\n                        <div className='Login-alert' title='Required'>\r\n                            <ErrorMessage component='div' name='password' className='alert alert-primary' id='Login-alert' />\r\n                        </div>\r\n                        <div className=\"form-group\" id='Login-padding'>\r\n                            <label className='Login-label'>\r\n                                Login as...\r\n                            </label>\r\n                            <Field\r\n                                className='form-select'\r\n                                component=\"select\"\r\n                                name=\"type\"\r\n                                title={values.type}\r\n                            >\r\n                                <option value=\"CUSTOMER\">Customer</option>\r\n                                <option value=\"COMPANY\">Company</option>\r\n                                <option value=\"ADMIN\">Admin</option>\r\n                            </Field>\r\n                        </div>\r\n                        <div className='Login-submit' id='Login-padding'>\r\n                            <button type='submit' className='btn btn-primary' disabled={!(isValid && dirty)} title='Login'>\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    </div >)\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}